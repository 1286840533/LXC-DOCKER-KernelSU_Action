name: 编译 vince的 lxc-docker内核
on:
  watch:
    types: [started]

  workflow_dispatch:

jobs:
  build:
    name: 
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: 构建编译内核环境
      run: |
        sudo apt-get update
        sudo -E apt-get -y -qq install git make bc bison ccache openssl zip kmod cpio flex libelf-dev curl libssl-dev libtfm-dev wget device-tree-compiler ca-certificates python3 python2 binutils binutils-aarch64-linux-gnu binutils-arm-linux-gnueabi
        mkdir -p $GITHUB_WORKSPACE/kernel_workspace

    
    - name: 下载Clang-aosp编译器
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        mkdir clang-aosp
        git clone -q --depth=1 --single-branch https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86 -b android13-release clang-aosp
    
    
    - name: 下载内核源码
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        git clone https://github.com/aospa-vince/android_kernel_xiaomi_vince -b topaz android-kernel --depth=1
                  
    
    - name: 开启lxc和docker配置
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        wget https://github.com/fate-think/LXC-DOCKER-KernelSU_Action/releases/download/1.0.0/add-lxc-docker-custom.sh
        chmod 755 add-lxc-docker.sh
        ./add-lxc-docker-custom.sh android-kernel/arch/arm64/configs/vince-perf_defconfig
        echo "# CONFIG_ANDROID_PARANOID_NETWORK is not set" >> android-kernel/arch/arm64/configs/vince-perf_defconfig
        
    - name: 设置ccache缓存
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: build-kernel-mido-kernel
        max-size: 2G

    - name: 开始编译内核
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
        export PATH=$GITHUB_WORKSPACE/kernel_workspace/clang-aosp/clang-r450784d/bin:$PATH
        export KBUILD_BUILD_HOST=17
        export KBUILD_BUILD_USER=HyperPower
        export CONFIG_FILE="vince-perf_defconfig"
        make -s -j$(nproc --all) O=out ARCH=arm64 vince-perf_defconfig
        make -j$(nproc --all) CC="ccache clang" O=out ARCH=arm64 CLANG_TRIPLE="aarch64-linux-gnu-" CROSS_COMPILE="aarch64-linux-gnu-" CROSS_COMPILE_ARM32="arm-linux-gnueabi-" LLVM=1 LLVM_IAS=1
                
    - name: 检查编译内核生成文件
      run: |
       cd $GITHUB_WORKSPACE/kernel_workspace
       if [ -f android-kernel/out/arch/arm64/boot/Image.gz-dtb ]; then
           echo "CHECK_FILE_IS_OK=true" >> $GITHUB_ENV
       else
           echo "Kernel output file is empty"
           exit 1
       fi
   
  
    - name: 制作Anykernel3卡刷包
      if: env.CHECK_FILE_IS_OK == 'true'
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        git clone https://github.com/osm0sis/AnyKernel3
        sed -i 's/do.devicecheck=1/do.devicecheck=0/g' AnyKernel3/anykernel.sh
        sed -i 's!block=/dev/block/platform/omap/omap_hsmmc.0/by-name/boot;!block=/dev/block/bootdevice/by-name/boot;!g' AnyKernel3/anykernel.sh
        sed -i 's/is_slot_device=0;/is_slot_device=0;/g' AnyKernel3/anykernel.sh
        cp android-kernel/out/arch/arm64/boot/Image.gz-dtb AnyKernel3/
        rm -rf AnyKernel3/.git* AnyKernel3/README.md
        rm -rf AnyKernel3/ramdisk AnyKernel3/modules AnyKernel3/patch
    
    - name: 上传Upload AnyKernel3
      if: env.CHECK_FILE_IS_OK == 'true'
      uses: actions/upload-artifact@v3
      with:
        name: Vince-lxc-docker-kernel-20230801
        path: kernel_workspace/AnyKernel3/*
